;;; stellaris-company.el --- Stellaris completion with company

;; Copyright (C) 2016 Gabriel Radanne
;; Licensed under the GNU General Public License.

;; Author: Gabriel Radanne
;; Keywords: paradox modding
;; URL: https://github.com/Drup/paradox.el

;; This file is *NOT* part of GNU Emacs.

;; This program is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation; either version 2 of the License, or
;; (at your option) any later version.

;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
;; GNU General Public License for more details.

(require 'stellaris-list)
(require 'company)

;; Simply append the autogenerated stuff
(defconst stellaris-completions
  (append stellaris-effects stellaris-triggers))

;; Annotate with the kind (trigger or event)
(defun stellaris-annotation (s)
  (format " [%s]" (get-text-property 0 :kind s)))

;; Meta is the scope
(defun stellaris-meta (s)
  (format
   "%s -> %s"
   (get-text-property 0 :scopes s)
   (get-text-property 0 :targets s)
   ))

(defun stellaris-company-backend (command &optional arg &rest ignored)
  (interactive (list 'interactive))

  (case command
    (interactive (company-begin-backend 'stellaris-company-backend))
    (prefix (and (eq major-mode 'paradox-mode)
                 (company-grab-symbol)))
    (candidates
     (remove-if-not
      (lambda (c) (string-prefix-p arg c))
      stellaris-completions))
    (annotation (stellaris-annotation arg))
    (meta (stellaris-meta arg))
    ))

;;;###autoload
(eval-after-load 'company
  '(add-to-list 'company-backends 'stellaris-company-backend))

(provide 'stellaris-company)
;;; stellaris-company.el ends here
